windspeed
data2 <- mutate(weather, wind_direction = int(wind_dir/22.5))
data2 <- mutate(weather, wind_direction = as.numeric(wind_dir/22.5))
data2$wind_direction
data2 <- mutate(weather, wind_direction = as.numeric(wind_dir//22.5))
data2 <- mutate(weather, wind_direction = as.integer(wind_dir/22.5))
data2$wind_direction
dirs = c("N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW","N")
data2 <- mutate(weather, wind_direction = dir[as.integer(wind_dir/22.5)])
data2 <- mutate(weather, wind_direction = dir[[as.integer(wind_dir/22.5)]])
data2 <- mutate(weather, wind_direction = dirs[as.integer(wind_dir/22.5)])
data2 <- mutate(weather, wind_directions = dirs[as.integer(wind_dir/22.5)])
data2 <- mutate(weather, wind_directions = [as.integer(wind_dir/22.5)])
data2 <- mutate(weather, wind_directions = as.integer(wind_dir/22.5))
wind_directions = factor(wind_directions, levels = dirs)
wind_directions = factor(data2$wind_directions, levels = dirs)
wind_directions = factor(data2$wind_directions, levels = dirs)
dirs = c("N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW")
wind_directions = factor(data2$wind_directions, levels = dirs)
data2$wind_direction
data2$wind_directions
wind_directions = factor(data2$wind_directions, levels = dirs, labels = dirs)
data2$wind_directions
wind_directions
wind_directions = lapply(data2$wind_directions, factor(levels = dirs, labels = dirs))
wind_directions = lapply(data2$wind_directions, as.factor(levels = dirs, labels = dirs))
wind_directions = lapply(data2$wind_directions, factor(levels = dirs, labels = dirs))
wind_directions = lapply(data2$wind_directions, factor, levels = dirs, labels = dirs)
wind_directions
wind_directions = lapply(data2$wind_directions, factor)
wind_directions
str(wind_directions)
str(wind_directions)
data2$wind_directions
data2 <- mutate(weather, wind_directions = as.character(as.integer(wind_dir/22.5)))
data2$wind_directions
wind_directions = lapply(data2$wind_directions, factor)
wind_directions
wind_directions = factor(data2$wind_directions)
wind_directions
str(wind_directions, labels = dirs)
wind_directions
factor(wind_directions, labels = dirs)
dirs = c("N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW", "N")
factor(wind_directions, labels = dirs)
.libPaths()
knitr::opts_chunk$set(echo=FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 4)
x <- dat
seq(1, nrow(x), 10
seq(1, nrow(x), 10)
library(dplyr)
library(dplyr)
library(ggplot2)
setwd("C:/Users/manish.grewal/emdp/R/RocketFuel")
dat <- read.csv("RocketFuel.csv")
dat <- read.csv("RocketFuel.csv")
## Convert to factors
dat$ftest <- factor(dat$test, labels = c("control", "test"))
## Convert to factors
dat$ftest <- factor(dat$test, labels = c("control", "test"))
dat$fconverted <- factor(dat$converted, labels = c("not-converted", "converted"))
x <- dat
x$tot_impr_bin_w <- cut(x$tot_impr, breaks = seq(min(x$tot_impr) - min(x$tot_impr) %% 10, max(x$tot_impr) + 10, 10), dig.lab = 5)
x$tot_impr_bin_f <- cut(x$tot_impr, breaks = c(0, unique(quantile(x$tot_impr, probs = seq(0, 1, .05)))), dig.lab = 5)
summ_f <- x %>%
group_by(tot_impr_bin_w, ftest) %>%
summarise(conversion_rate = mean(converted) * 100, count = n())
ggplot(summ_f, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = x$tot_impr_bin_w[seq(1, nrow(x), 10)]) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
seq(1, nrow(x), 10)
nrow(unique(x$tot_impr_bin_w))
unique(x$tot_impr_bin_w)
length(unique(x$tot_impr_bin_w))
ggplot(summ_f, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = seq(1, length(unique(x$tot_impr_bin_w)), 10)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(summ_f, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = seq(1, length(unique(x$tot_impr_bin_w)), 2)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
x <- dat1
x$tot_impr_bin_w <- cut(x$tot_impr, breaks = c(0, unique(quantile(x$tot_impr, probs = seq(0, 1, .05)))), dig.lab = 5)
x$tot_impr_bin_w <- cut(x$tot_impr, breaks = seq(min(x$tot_impr) - min(x$tot_impr) %% 10, max(x$tot_impr) + 10, 10), dig.lab = 5)
summ <- x %>%
group_by(tot_impr_bin_w, ftest) %>%
summarise(conversion_rate = mean(converted) * 100, count = n())
ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = x$tot_impr_bin_w[seq(1, nrow(x), 10)]) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = seq(1, length(unique(x$tot_impr_bin_w)), 10)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = x$tot_impr_bin_w[seq(1, length(unique(x$tot_impr_bin_w)), 10)]) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = x$tot_impr_bin_w[seq(1, length(unique(x$tot_impr_bin_w)), 2)]) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
x$tot_impr_bin_w[seq(1, length(unique(x$tot_impr_bin_w)), 2)]
ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = sort(x$tot_impr_bin_w[seq(1, length(unique(x$tot_impr_bin_w)), 2)])) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p <- ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity")
View(p)
View(p)
p
p <- ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
#scale_x_discrete(breaks = sort(x$tot_impr_bin_w[seq(1, length(unique(x$tot_impr_bin_w)), 2)])) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
p <- ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(summ, aes(tot_impr_bin_w, conversion_rate, fill = ftest)) +
geom_bar(stat = "identity") +
scale_x_discrete(breaks = every_nth(n = 4)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
quantile(x$tot_impr, probs = seq(0, 1, .03))
quantile(x$tot_impr, probs = seq(0, 1, .03)
quantile(x$tot_impr, probs = seq(0, 1, .03))
quantile(x$tot_impr, probs = seq(0, 1, .03))
quantile(x$tot_impr, probs = seq(0, 1, .05))
quantile(x$tot_impr, probs = seq(0, 1, .001))
##IMPORT THE DATA
#data <- read.csv("clipboard", sep = "\t", header = TRUE)
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
library(readxl)
##IMPORT THE DATA
#data <- read.csv("clipboard", sep = "\t", header = TRUE)
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
##IMPORT THE DATA
#data <- read.csv("clipboard", sep = "\t", header = TRUE)
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
setwd("C:/Users/manish.grewal/emdp/R/Agri")
##IMPORT THE DATA
#data <- read.csv("clipboard", sep = "\t", header = TRUE)
setwd("C:/Users/manish.grewal/emdp/R/Agri")
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
View(data)
#########################
##To test this claim, select the D6 disease access data from October 2017 onwards
data1 <- data[95:123,10]
data1
data1 <- data[95:123,"D6"]
View(data1)
#########################
##To test this claim, select the D6 disease access data from October 2017 onwards
data1 <- data[95:123,10]
data11 <- data[95:123,"D6"]
data1 == data11
###calculate the mean and standard deviation from data1
summary(data1)
t.test(data1, mu = 60, alternative = "greater", conf.level = 0.95)
sd(data1)
str(data1)
sd(data1)
sd(as.numeric(data1))
str(data1)
sd(as.numeric(data1[,1]))
mean(as.numeric(data1[,1]))
mean(data1[,1])
data1
data1[,1]
mean(data1[,1])
###calculate the mean and standard deviation from data1
summary(data1)
sd(data1)
sd(data)
sd(unlist(data1))
unlist(data1[,1])
data1
str(data1)
typeof(data1)
#########################
##To test this claim, select the D6 disease access data from October 2017 onwards
data1 <- data[95:123,10]
typeof(data1)
t.test(data1, mu = 60, alternative = "greater", conf.level = 0.95)
sd(unlist(data1))
(28)**1/2
(28)^1/2
sqrt(28)
2.048 * 19.3548 / sqrt(28)
(mean(unlist(data1)))
### one-sample t-test
2.048 * (mean(unlist(data1)) - 60)  / 19.3548 / sqrt(28)
t.test(data1, mu = 60, alternative = "greater", conf.level = 0.95)
sums <- sum(data[,5:16])
sums
data[,5:16]
sums <- lapply(data[,5:15], sum)
sums
tot_usage <- sum (data$D1, data$D2,data$D3, data$D4,data$D5,data$D6,
data$D7,data$D8,data$D9, data$D10,data$D11)
4295/26830
test <- prop.test(x = 4295, n = 26830, p = .15, alternative = "greater", conf.level = 0.95)
test
D6_usage <- sum(data$D6)
D6_usage
D6_usage/2
sums <- lapply(data[-124,5:15], sum)
sum(sums)
sum(unlist(sums))
p_usage <- D6_usage/tot_usage
D6_usage <- sum(data$D6)
D6_usage <- sum(data$D6[-124])
tot_usage <- sum(unlist(sums))
tot_usage
sums["D6"]
prop <- sums["D6"] / tot_usage
sums["D6"]
tot_usage
prop <- sums["D6",] / tot_usage
prop <- sums[1,"D6"] / tot_usage
prop <- sums["D6"] / tot_usage
prop <- sums[["D6"]] / tot_usage
sums[["D6"]]
tot_usage
p_usage <- D6_usage/tot_usage
D6_usage
tot_usage
D6_usage <- sum(data$D6[-124])
tot_usage <- sum (data$D1, data$D2,data$D3, data$D4,data$D5,data$D6,
data$D7,data$D8,data$D9, data$D10,data$D11)
p_usage <- D6_usage/tot_usage
sums <- lapply(data[-124,5:15], sum)
## Assuming equql varience
t.test (newdata$No.of.users~newdata$dummy, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
data2$dummy <- "range_1"
data3$dummy <- "range_2"
newdata <- rbind(data2, data3)
names(newdata)
## Assuming equql varience
t.test (newdata$No.of.users~newdata$dummy, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
#############################
#Question 3: JAT believes that over the years, the average number of app users have
#increased significantly. Is there statistical evidence to support that the average
#number of users in year 2017-2018 is more than average number of users in year
#2015-2016 at at=0.05? Support your answer with all necessary tests.
##################################
## Spliting the data into two(2015-16, 2017-2018)
data2 <- data[1:73,]
data3 <- data[74:123,]
newdata <- rbind(data2, data3)
names(newdata)
## Assuming equql varience
t.test (newdata$No.of.users~newdata$dummy, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
library(readxl)
##IMPORT THE DATA
setwd("C:/Users/manish.grewal/emdp/R/Agri")
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
#data <- read.csv("clipboard", sep = "\t", header = TRUE)
View(data)
#########################
##To test this claim, select the D6 disease access data from October 2017 onwards
data1 <- data[95:123,10]
###calculate the mean and standard deviation from data1
summary(data1)
sd(data1)
t.test(data1, mu = 60, alternative = "greater", conf.level = 0.95)
t.test(data1, mu > 60, alternative = "greater", conf.level = 0.95)
t.test(data1, mu = 60, alternative = "greater", conf.level = 0.95)
t.test(data1, mu = 60, alternative = "greater", conf.level = 0.99)
t.test(data1, mu = 60, alternative = "greater", conf.level = 0.98)
### one-sample t-test
2.048 * (mean(unlist(data1)) - 60)  / 19.3548 / sqrt(28)
(mean(unlist(data1)) - 60)  / 19.3548 / sqrt(28)
(mean(unlist(data1)) - 60)
### one-sample t-test
2.048 * (mean(unlist(data1)) - 60)  / (19.3548 / sqrt(28))
### one-sample t-test
2.048 * (mean(unlist(data1)) - 60)  / (19.3548 / sqrt(28)) /2
t.test(data1, mu = 65, alternative = "greater", conf.level = 0.95)
t.test(data1, mu = 63, alternative = "greater", conf.level = 0.95)
t.test(data1, mu = 62, alternative = "greater", conf.level = 0.95)
D6_usage <- sum(data$D6[-124])
tot_usage <- sum (data$D1, data$D2,data$D3, data$D4,data$D5,data$D6,
data$D7,data$D8,data$D9, data$D10,data$D11)
p_usage <- D6_usage/tot_usage
D6_usage <- sum(data$D6)
D6_usage
tot_usage <- sum (data$D1, data$D2,data$D3, data$D4,data$D5,data$D6,
data$D7,data$D8,data$D9, data$D10,data$D11)
tot_usage
p_usage <- D6_usage/tot_usage
tot_usage <- sum(unlist(sums))
prop <- sums[["D6"]] / tot_usage
sums <- lapply(data[-124,5:15], sum)
tot_usage <- sum(unlist(sums))
prop <- sums[["D6"]] / tot_usage
sums[["D6"]]
tot_usage
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet", header = TRUE)
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
D6_usage <- sum(data$D6)
tot_usage <- sum (data$D1, data$D2,data$D3, data$D4,data$D5,data$D6,
data$D7,data$D8,data$D9, data$D10,data$D11)
tot_usage
p_usage <- D6_usage/tot_usage
sums <- lapply(data[-124,5:15], sum)
sums
tot_usage <- sum(unlist(sums))
prop <- sums[["D6"]] / tot_usage
tot_usage <- sum(unlist(sums * 2))
tot_usage <- sum(unlist(sums)*2)
prop <- sums[["D6"]] * 2 / tot_usage
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
#data <- read.csv("clipboard", sep = "\t", header = TRUE)
data <- data[-124,]
sums <- lapply(data[,5:15], sum )
tot_usage <- sum(unlist(sums))
prop <- sums[["D6"]] * 2 / tot_usage
tot_usage <- sum(unlist(sums))
sums <- lapply(data[,5:15], sum )
tot_usage <- sum(unlist(sums))
prop <- sums[["D6"]] / tot_usage
sums[["D6"]]
tot_usage
prop <- sums[["D6"]] / tot_usage
test <- prop.test(x = 4295, n = 26830, p = .15, alternative = "greater", conf.level = 0.95)
test
#############################
#Question 3: JAT believes that over the years, the average number of app users have increased significantly. Is there statistical evidence to support that the average number of users in year 2017-2018 is more than average number of users in year 2015-2016 at at=0.05?
#  Support your answer with all necessary tests.
##################################
## Spliting the data into two(2015-16, 2017-2018)
data2 <- data[1:73,]
data3 <- data[74:123,]
data2$dummy <- "range_1"
data3$dummy <- "range_2"
newdata <- rbind(data2, data3)
names(newdata)
## Assuming equql varience
t.test (newdata$No.of.users~newdata$dummy, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
## Assuming equql varience
t.test (newdata$"No of users"~newdata$dummy, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
## Assuming equql varience
t.test (newdata$"No of users"~newdata$dummy, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
t.test (newdata$"No of users"~newdata$dummy, mu = 0, alternative = "greater", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
t.test (newdata$"No of users"~newdata$dummy, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = FALSE)
shapiro.test(data5$Usage)
##creating data-subset (2016-2018)
data5 <- data [26:123,]
## Test of Normality (the data is not normal)
#H0 - data deviates from normality
#H1 - data devaites from normality
shapiro.test(data5$Usage)
qqnorm(data5$Usage)
library(ggplot2)
ggplot(data5, aes(sample = Usage)) +
stat_qq() +
stat_qqline()
ggplot(data5, aes(sample = Usage)) +
stat_qq() +
stat_qqline()
ggplot(data5, aes(sample = Usage)) +
stat_qq() +
stat_qq_line()
data5$logusage <- log(data5$Usage)
shapiro.test(data5$logusage)
ggplot(data5, aes(sample = logusage)) +
stat_qq() +
stat_qq_line()
ggplot(data5, aes(sample = Usage)) +
stat_qq() +
stat_qq_line()
shapiro.test(data5$logusage)
## using log transformed variables
anova <- aov (data5$logusage~data5$Week)
anova
model.tables(anova, type = "means")
cor <- cor.test(data5$No.of.users, data5$Usage)
cor <- cor.test(data5$"No of users", data5$Usage)
cor
rdate <- as.Date(data$Month.Year,"%m-%d-%y")
rdate <- as.Date(data$Month-Year,"%m-%d-%y")
rdate <- as.Date(data$"Month-Year","%m-%d-%y")
data$"Month-Year"
rdate <- as.Date(data$"Month-Year","%y-%m-%d")
##draw the line chart and see the spike
View(data)
##IMPORT THE DATA
setwd("C:/Users/manish.grewal/emdp/R/Agri")
library(readxl)
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
plot(data$Usage~data$"Month-Year", type ="l", col = "red")
ggplot(date, aes("Month-Year", Usage)) +
geom_line(group = 1)
library(ggplot2)
ggplot(date, aes("Month-Year", Usage)) +
geom_line(group = 1)
ggplot(date, aes(Month-Year, Usage)) +
geom_line(group = 1)
ggplot(date, aes(rdate, Usage)) +
geom_line(group = 1)
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1)
data$rdate <- data$Month-Year
data$rdate <- data$"Month-Year"
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1)
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_continuous(n.breaks = 10)
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1)
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_continuous(n.breaks = 10)
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_continuous(breaks = 1:10)
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_continuous(breaks = c(1:10))
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1)
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_continuous(breaks = c(1:10))
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_discrete(breaks = c(1:10))
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_continuous(nbreaks = c(1:10))
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_continuous(n.breaks = 10)
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_continuous(breaks = c(1:20))
data6 <- data[1:61,]
data7 <- data[62:123,]
data6$dummy <- "before"
data7$dummy <- "after"
newdata1 <- rbind(data6, data7)
t.test (newdata1$Usage~newdata1$dummy, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
scale_x_discrete(breaks = every_nth(n = 2))
every_nth = function(n) {return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})}
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) #+
scale_x_discrete(breaks = every_nth(n = 3))
scale_x_discrete(breaks = every_nth(n = 1))
ggplot(data, aes(rdate, Usage)) +
geom_line(group = 1) +
scale_x_discrete(breaks = every_nth(n = 1))
bdata <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Belagavi_weather")
bdata <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Dharvad_weather")
bdata <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Belagavi_weather")
ddata <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Dharvad_weather")
ddata <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Dharwad_weather")
bdata1 <- subset(bdata,Temperature <= 24 & Humidity >= 80)
bdata2 <- subset(bdata,!(Temperature <= 24 & Humidity >= 80))
bdata1$weather <- "favourable"
bdata2$weather <- "unfavourable"
newbdata <- rbind (bdata1, bdata2)
test1 <- t.test (newbdata$D1~newbdata$weather, mu = 0, alternative = "two.sided", conf.level = 0.95, paired = FALSE, var.eq = TRUE)
test1
library(readxl)
##IMPORT THE DATA
setwd("C:/Users/manish.grewal/emdp/R/Agri")
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
library(dplyr)
data1 <- mutate (data, disease = D1+ D2 + D3 + D4 + D5 + D6 + D7 + D8 + D9 + D10 + D11,
variety = V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9 + V10)
group <- group_by(data1, Week)
sum <- summarize(group, disease = sum(disease, na.rm = TRUE), variety = sum(variety, na.rm = TRUE))
sum1 <- data.frame (week = 1:4, disease = sum$disease, variety = sum$variety)
sum
sum1 <- data.frame (week = 1:5, disease = sum$disease, variety = sum$variety)
chisq.test(sum1)
chisq.test(sum1[1:4,])
data <- data[-124,]
data1 <- mutate (data, disease = D1+ D2 + D3 + D4 + D5 + D6 + D7 + D8 + D9 + D10 + D11,
variety = V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9 + V10)
group <- group_by(data1, Week)
sum <- summarize(group, disease = sum(disease, na.rm = TRUE), variety = sum(variety, na.rm = TRUE))
sum1 <- data.frame (week = 1:5, disease = sum$disease, variety = sum$variety)
sum
sum1
chisq.test(sum1[1:4,])
knitr::opts_chunk$set(echo = TRUE)
library(read_excel)
library(readxl)
library(readxl)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
setwd("C:/Users/manish.grewal/emdp/R/Agri")
data <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Data Sheet")
ddata <- read_excel("IMB733-XLS-ENG.xlsx", sheet = "Dharwad_weather")
View(data)
