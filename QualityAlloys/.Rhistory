library(ggplot2)
ggplot(summ, aes(x = Period)) +
geom_col(aes(y = Visits_1), stat = "identity")
p + geom_col(aes(y = Visits_1, stat = "identity"))
p <- ggplot(summ, aes(x = Period))
p + geom_col(aes(y = Visits_1, stat = "identity"))
p + geom_bar(aes(y = Visits_1, stat = "identity"))
p + geom_bar(aes(y = Visits_1), stat = "identity")
p + geom_col(aes(y = Revenue_1))
p + geom_col(aes(y = UniqueVisits_1))
p + geom_col(aes(y = Revenue_1))
summ <- by_period %>%
select(!Week) %>%
summarise(across(everything(), list(mean, median, sd, min, max), names = "{col}.{fn}"))
summ <- by_period %>%
select(!Week) %>%
summarise(across(everything(), list(mean, median, sd, min, max), names = "{col}.{fn}"))
by_period <- group_by(weekly_data, Period)
library(dplyr)
by_period <- group_by(weekly_data, Period)
summ <- by_period %>%
select(!Week) %>%
summarise(across(everything(), list(mean, median, sd, min, max), names = "{col}.{fn}"))
summ <- by_period %>%
select(!Week) %>%
summarise(across(everything(), list(mean, median, sd, min, max), .names = "{col}.{fn}"))
summ <- by_period %>%
select(!Week) %>%
summarise(across(everything(), list(mean, median, sd, min, max), .names = c("{col}.{fn}", "{col}.{fn}")))
weekly_data$period <- factor(weekly_data$Period, levels = c("Initial Period", "Pre-promotion", "Promotion", "Post-promotion"))
by_period <- group_by(weekly_data, Period)
summ <- by_period %>%
select(!Week) %>%
summarise(across(everything(), list(mean, median, sd, min, max)
#, .names = c("{col}.{fn}")
))
summ <- by_period %>%
select(!Week, !Period) %>%
summarise(across(everything(), list(mean, median, sd, min, max)
#, .names = c("{col}.{fn}")
))
summ <- by_period %>%
select(where(is.numeric())) %>%
summarise(across(everything(), list(mean, median, sd, min, max)
#, .names = c("{col}.{fn}")
))
summ <- by_period %>%
select_if(where(is.numeric)) %>%
summarise(across(everything(), list(mean, median, sd, min, max)
#, .names = c("{col}.{fn}")
))
summ <- by_period %>%
select_if(is.numeric) %>%
summarise(across(everything(), list(mean, median, sd, min, max)
#, .names = c("{col}.{fn}")
))
weekly_data$period <- factor(weekly_data$Period, levels = c("Initial Period", "Pre-promotion", "Promotion", "Post-promotion"), ordered = TRUE)
ggplot(weekly_data, aes(LbsSold, Revenue)) +
geom_point()
ggplot(weekly_data, aes(LbsSold, Revenue)) +
geom_point() +
geom_smooth()
cor(weekly_data$LbsSold, weekly_data$Revenue)
cor(weekly_data$LbsSold, weekly_data$Revenue, method = "pearson")
cor(weekly_data$LbsSold, weekly_data$Revenue, method = "kendall")
cor
cor(weekly_data$Visits, weekly_data$Revenue, method = "pearson")
str(lbs_sold)
summary(lbs_sold)
mean(lbs_sold$LbsSold)
printf("Mean: %.2d", mean(lbs_sold$LbsSold))
sprintf("Mean: %.2d", mean(lbs_sold$LbsSold))
paste("Median:", median(lbs_sold$LbsSold))
paste("Std. Dev.:", sd(lbs_sold$LbsSold))
paste("Minimum:", min(lbs_sold$LbsSold))
paste("Maximum:", max(lbs_sold$LbsSold))
paste("Mean:", round(mean(lbs_sold$LbsSold, 2)))
paste("Mean:", round(mean(lbs_sold$LbsSold, digits = 2)))
paste("Mean:", round(mean(lbs_sold$LbsSold, digits = 2.2)))
paste("Mean:", round(mean(lbs_sold$LbsSold)))
paste("Mean:", mean(lbs_sold$LbsSold))
ggplot(lbs_sold, aes(LbsSold)) +
geom_histogram()
ggplot(lbs_sold, aes(LbsSold)) +
geom_bar()
ggplot(lbs_sold, aes(LbsSold)) +
geom_bar(stat = "count")
ggplot(lbs_sold, aes(LbsSold)) +
geom_bar(aes(stat = "count"))
ggplot(lbs_sold, aes(LbsSold)) +
geom_histogram(aes(stat = "count"))
lbs_sold_mean <- mean(lbs_sold$LbsSold)
lbs_sold_sd   <- sd(lbs_sold$LbsSold)
emp_rule <- data.frame(
"Interval" = c("mean ± 1 std. dev.", "mean ± 2 std. dev.", "mean ± 3 std. dev. 99%"),
"Theoretical % of Data" = c(),
"Theoretical No. Obs." = c(),
"Actual No. Obs." = c())
emp_rule <- data.frame(
"Interval" = c("mean ± 1 std. dev.", "mean ± 2 std. dev.", "mean ± 3 std. dev. 99%"),
"Theoretical % of Data" = c(68, 95, 99),
)
emp_rule <- data.frame(
"Interval" = c("mean 1 std. dev.", "mean 2 std. dev.", "mean 3 std. dev. 99%"),
"Theoretical % of Data" = c(68, 95, 99),
)
emp_rule <- data.frame(
"Interval" = c("mean 1 std. dev.", "mean 2 std. dev.", "mean 3 std. dev."),
"Theoretical % of Data" = c(68, 95, 99),
)
emp_rule <- data.frame(
"Interval" = c("mean 1 std. dev.", "mean 2 std. dev.", "mean 3 std. dev."),
"Theoretical % of Data" = c(68, 95, 99),
)
emp_rule <- data.frame(
"Interval" = c("mean 1 std. dev.", "mean 2 std. dev.", "mean 3 std. dev."),
"Theoretical % of Data" = c(68, 95, 99)
)
emp_rule <- data.frame(
"Interval" = c("mean ± 1 std. dev.", "mean ± 2 std. dev.", "mean ± 3 std. dev. 99%"),
"Theoretical % of Data" = c(68, 95, 99)
)
emp_rule["Theoretical % of Data"]
emp_rule <- data.frame(
"Interval" = c("mean ± 1 std. dev.", "mean ± 2 std. dev.", "mean ± 3 std. dev. 99%"),
"Theoretical pct of Data" = c(68, 95, 99)
)
emp_rule <- data.frame(
"Interval" = c("mean ± 1 std. dev.", "mean ± 2 std. dev.", "mean ± 3 std. dev. 99%"),
"TheoreticalPctOfData" = c(68, 95, 99)
)
emp_rule$TheoreticalNoOfObs <- emp_rule$TheoreticalPctOfData * nrow(lbs_sold) / 100
nrow(lbs_sold)
emp_rule
emp_rule$ActualNoOfObs <- c(0)
emp_rule
emp_rule$ActualNoOfObs[1] = 5
emp_rule
filter(lbs_sold, LbsSold > mean - sd, LbsSold < mean + sd)
filter(lbs_sold, LbsSold > lbs_sold_mean - lbs_sold_sd, LbsSold < lbs_sold_mean + lbs_sold_sd)
filter(lbs_sold, LbsSold > lbs_sold_mean - 2*lbs_sold_sd, LbsSold < lbs_sold_mean + 2*lbs_sold_sd)
filter(lbs_sold, LbsSold > lbs_sold_mean - 3*lbs_sold_sd, LbsSold < lbs_sold_mean + 3*lbs_sold_sd)
emp_rule$ActualNoOfObs <- c(
nrow(filter(lbs_sold, LbsSold > lbs_sold_mean - lbs_sold_sd, LbsSold < lbs_sold_mean + lbs_sold_sd)),
nrow(filter(lbs_sold, LbsSold > lbs_sold_mean - 2*lbs_sold_sd, LbsSold < lbs_sold_mean + 2*lbs_sold_sd)),
nrow(filter(lbs_sold, LbsSold > lbs_sold_mean - 3*lbs_sold_sd, LbsSold < lbs_sold_mean + 3*lbs_sold_sd)))
emp_rule
lbs_sold$zscore <- (lbs_sold$LbsSold - lbs_sold_mean) / lbs_sold_sd
arrange(lbs_sold, zscore )
View(arrange(lbs_sold, zscore ))
lbs_sold$scale <- scale(lbs_sold$LbsSold)
View(arrange(lbs_sold, zscore ))
emp_rule <- data.frame(
"Interval" = c("mean + 1 std. dev.", "mean - 1 std. dev.", "1 std. dev. to 2 std. dev.", "-1 std. dev. to -2 std. dev.", "2 std. dev. to 3 std. dev.", "-2 std. dev. to -3 std. dev."),
"TheoreticalPctOfData" = c(68/2, 68/2, 95/2, 95/2, 99/2, 99/2)
)
View(emp_rule)
View(emp_rule)
emp_rule$TheoreticalNoOfObs <- emp_rule$TheoreticalPctOfData * nrow(lbs_sold) / 100
emp_rule$ActualNoOfObs <- c(
nrow(filter(lbs_sold, zscore >= 0, zscore <= 1)),
nrow(filter(lbs_sold, zscore >= -1, zscore <= 0)),
nrow(filter(lbs_sold, zscore >= 1, zscore <= 2)),
nrow(filter(lbs_sold, zscore >= -2, zscore <= -1)),
nrow(filter(lbs_sold, zscore >= 2, zscore <= 3)),
nrow(filter(lbs_sold, zscore >= -3, zscore <= -2)))
emp_rule$ActualNoOfObs <- c(
nrow(filter(lbs_sold, zscore >= 0, zscore <= 1)),
nrow(filter(lbs_sold, zscore >= -1, zscore <= 0)),
nrow(filter(lbs_sold, zscore >= 1, zscore <= 2)),
nrow(filter(lbs_sold, zscore >= -2, zscore <= -1)),
nrow(filter(lbs_sold, zscore >= 2,  zscore <= 3)),
nrow(filter(lbs_sold, zscore >= -3, zscore <= -2)))
knitr::kable(emp_rule)
rnorm(10)
rnorm(100)
summary(rnorm(100))
summary(rnorm(1000))
data.frame(rnorm(1000))
rn <- data.frame(rnorm(1000))
emp_rule$rn <- c(
nrow(filter(lbs_sold, zscore >= 0, zscore <= 1)),
nrow(filter(lbs_sold, zscore >= -1, zscore <= 0)),
nrow(filter(lbs_sold, zscore >= 1, zscore <= 2)),
nrow(filter(lbs_sold, zscore >= -2, zscore <= -1)),
nrow(filter(lbs_sold, zscore >= 2,  zscore <= 3)),
nrow(filter(lbs_sold, zscore >= -3, zscore <= -2)))
rn <- data.frame(rn = rnorm(1000))
emp_rule$rn <- c(
nrow(filter(rn, zscore >= 0, zscore <= 1)),
nrow(filter(rn, zscore >= -1, zscore <= 0)),
nrow(filter(rn, zscore >= 1, zscore <= 2)),
nrow(filter(rn, zscore >= -2, zscore <= -1)),
nrow(filter(rn, zscore >= 2,  zscore <= 3)),
nrow(filter(rn, zscore >= -3, zscore <= -2)))
emp_rule$rn <- c(
nrow(filter(rn, rn >= 0, rn <= 1)),
nrow(filter(rn, rn >= -1, rn <= 0)),
nrow(filter(rn, rn >= 1, rn <= 2)),
nrow(filter(rn, rn >= -2, rn <= -1)),
nrow(filter(rn, rn >= 2,  rn <= 3)),
nrow(filter(rn, rn >= -3, rn <= -2)))
rn <- data.frame(rn = rnorm(290))
emp_rule$rn <- c(
nrow(filter(rn, rn >= 0, rn <= 1)),
nrow(filter(rn, rn >= -1, rn <= 0)),
nrow(filter(rn, rn >= 1, rn <= 2)),
nrow(filter(rn, rn >= -2, rn <= -1)),
nrow(filter(rn, rn >= 2,  rn <= 3)),
nrow(filter(rn, rn >= -3, rn <= -2)))
rn <- data.frame(rn = rnorm(10000))
emp_rule$rn <- c(
nrow(filter(rn, rn >= 0, rn <= 1)),
nrow(filter(rn, rn >= -1, rn <= 0)),
nrow(filter(rn, rn >= 1, rn <= 2)),
nrow(filter(rn, rn >= -2, rn <= -1)),
nrow(filter(rn, rn >= 2,  rn <= 3)),
nrow(filter(rn, rn >= -3, rn <= -2)))
rn <- data.frame(rn = rnorm(100000))
emp_rule$rn <- c(
nrow(filter(rn, rn >= 0, rn <= 1)),
nrow(filter(rn, rn >= -1, rn <= 0)),
nrow(filter(rn, rn >= 1, rn <= 2)),
nrow(filter(rn, rn >= -2, rn <= -1)),
nrow(filter(rn, rn >= 2,  rn <= 3)),
nrow(filter(rn, rn >= -3, rn <= -2)))
34191 + 34108
rn <- data.frame(rn = rnorm(1000000))
emp_rule$rn <- c(
nrow(filter(rn, rn >= 0, rn <= 1)),
nrow(filter(rn, rn >= -1, rn <= 0)),
nrow(filter(rn, rn >= 1, rn <= 2)),
nrow(filter(rn, rn >= -2, rn <= -1)),
nrow(filter(rn, rn >= 2,  rn <= 3)),
nrow(filter(rn, rn >= -3, rn <= -2)))
341819 + 340487
136241 + 135776
21309 + 21637
emp_rule <- data.frame(
"Interval" = c("mean + 1 std. dev.", "mean - 1 std. dev.", "1 std. dev. to 2 std. dev.", "-1 std. dev. to -2 std. dev.", "2 std. dev. to 3 std. dev.", "-2 std. dev. to -3 std. dev."),
"TheoreticalPctOfData" = c(68/2, 68/2, 27/2, 27/2, 4.2/2, 4.2/2)
)
emp_rule$TheoreticalNoOfObs <- emp_rule$TheoreticalPctOfData * nrow(lbs_sold) / 100
emp_rule$ActualNoOfObs <- c(
nrow(filter(lbs_sold, zscore >= 0, zscore <= 1)),
nrow(filter(lbs_sold, zscore >= -1, zscore <= 0)),
nrow(filter(lbs_sold, zscore >= 1, zscore <= 2)),
nrow(filter(lbs_sold, zscore >= -2, zscore <= -1)),
nrow(filter(lbs_sold, zscore >= 2,  zscore <= 3)),
nrow(filter(lbs_sold, zscore >= -3, zscore <= -2)))
rn <- data.frame(rn = rnorm(10000000))
emp_rule$rn <- c(
nrow(filter(rn, rn >= 0, rn <= 1)),
nrow(filter(rn, rn >= -1, rn <= 0)),
nrow(filter(rn, rn >= 1, rn <= 2)),
nrow(filter(rn, rn >= -2, rn <= -1)),
nrow(filter(rn, rn >= 2,  rn <= 3)),
nrow(filter(rn, rn >= -3, rn <= -2)))
3413112 + 3415091
emp_rule$TheoreticalPctOfData <- rn * 100 / n
emp_rule$TheoreticalPctOfData <- emp_rule$rn * 100 / n
n <- 10000000
rn <- data.frame(rn = rnorm(n))
emp_rule$rn <- c(
nrow(filter(rn, rn >= 0, rn <= 1)),
nrow(filter(rn, rn >= -1, rn <= 0)),
nrow(filter(rn, rn >= 1, rn <= 2)),
nrow(filter(rn, rn >= -2, rn <= -1)),
nrow(filter(rn, rn >= 2,  rn <= 3)),
nrow(filter(rn, rn >= -3, rn <= -2)))
emp_rule$TheoreticalPctOfData <- emp_rule$rn * 100 / n
34.13*2
13.6*2
2.14*2
68.26 + 27.2
68.26 + 27.2+4.28
emp_rule$TheoreticalNoOfObs <- emp_rule$TheoreticalPctOfData * nrow(lbs_sold) / 100
emp_rule$TheoreticalNoOfObs2 <- round(emp_rule$TheoreticalPctOfData * nrow(lbs_sold) / 100)
emp_rule$rn <- NULL
knitr::kable(emp_rule)
ggplot(rn, aes(rn)) +
geom_line()
ggplot(rn, aes(-5:5, rn)) +
geom_line()
n <- 100000 # sufficently high number to get theoretical pct
set.seed(123)
rn <- data.frame(rn = rnorm(n))
p1 <- ggplot(data = data.frame(x = c(-3, 3)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 0, sd = 1)) + ylab("") +
scale_y_continuous(breaks = NULL)
p1
p1 <- ggplot(data = data.frame(x = c(-5, 5)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 0, sd = 1)) + ylab("") +
scale_y_continuous(breaks = NULL)
p1
p1 <- ggplot(data = data.frame(x = c(-5, 5)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 0, sd = 1))  +
scale_y_continuous(breaks = NULL)
p1
p1 <- ggplot(data = data.frame(x = c(-5, 5)), aes(x)) +
stat_function(fun = dnorm, n = 1001, args = list(mean = 0, sd = 1))  +
scale_y_continuous(breaks = NULL)
p1
ggplot(rn, aes(lbs_sold$scale)) +
geom_line()
ggplot(rn, aes(lbs_sold$scale)) +
geom_histogram()
ggplot(lbs_sold, aes(scale)) +
geom_histogram()
ggplot(lbs_sold, aes(scale)) +
geom_histogram() +
geom_histogram(aes(data = rn, x = rn))
ggplot(lbs_sold, aes(scale)) +
geom_histogram() +
geom_histogram(data = rn, aes(x = rn))
ggplot() +
geom_histogram(lbs_sold, aes(scale)) +
geom_histogram(data = rn, aes(x = rn))
ggplot() +
geom_histogram(data = lbs_sold, aes(scale)) +
geom_histogram(data = rn, aes(x = rn))
ggplot() +
geom_histogram(data = lbs_sold, aes(x = scale)) +
geom_histogram(data = rn, aes(x = rn))
rn2 <- rnorm(290, mean = mean(lbs_sold$LbsSold), sd = sd(lbs_sold$LbsSold))
rn2
scale2 <- scale(rn2)
lbs_sold$rn2 <- rn2
lbs_sold$scale2 <- scale2
ggplot(lbs_sold) +
geom_bar(aes(zscore))
ggplot(lbs_sold) +
geom_histogram(aes(zscore))
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "blue") +
geom_histogram(aes())
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "blue")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "0000cc01") +
geom_histogram(aes())
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0000cc01")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), fill = "#0000cc01")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0000cc01")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc01")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc", fill = "lightblue")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc", fill = "#00336601")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc", fill = "#cc336601")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc", fill = "#cc336601") +
geom_histogram(aes(scale2), color = "#cc0033", fill = "#3366cc01")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc", fill = "#cc336607") +
geom_histogram(aes(scale2), color = "#cc0033", fill = "#3366cc01")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc", fill = "#cc336607") +
geom_histogram(aes(scale2), color = "#cc0033", fill = "#3366cc07")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc", fill = "#cc000007") +
geom_histogram(aes(scale2), color = "#cc0033", fill = "#3366cc07")
ggplot(lbs_sold) +
geom_histogram(aes(zscore), color = "#0033cc", fill = "#cc000007") +
geom_histogram(aes(scale2), color = "#cc0033", fill = "#0000cc07")
skew <- 3(mean(lbs_sold$LbsSold - median(lbs_sold$LbsSold))) / sd(lbs_sold$LbsSold)
skew <- 3(mean(lbs_sold$LbsSold) - median(lbs_sold$LbsSold)) / sd(lbs_sold$LbsSold)
skew <- 3(mean(lbs_sold$LbsSold) - median(lbs_sold$LbsSold))
mean(lbs_sold$LbsSold)
median(lbs_sold$LbsSold)
skew <- 3 * (mean(lbs_sold$LbsSold) - median(lbs_sold$LbsSold)) / sd(lbs_sold$LbsSold)
skew
install.packages("moments")
library(moments)
skewness(lbs_sold$LbsSold)
skew
kurtosis(lbs_sold$LbsSold)
all_traffic <- read.csv("clipboard")
all_traffic <- read.csv("clipboard")
all_traffic <- read.csv("clipboard")
all_traffic <- read.csv("clipboard", sep = "\t")
top_ten_ref <- read.csv("clipboard", sep = "\t")
top_ten_eng <- read.csv("clipboard", sep = "\t")
top_ten_geo <- read.csv("clipboard", sep = "\t")
top_ten_bro <- read.csv("clipboard", sep = "\t")
top_ten_os  <- read.csv("clipboard", sep = "\t")
View(top_ten_bro)
ggplot(all_traffic, aes(All.Traffic.Sources, Visits)) +
geom_col()
ggplot(top_ten_ref, aes("Top.Ten.Referring.Sites", Visits)) +
geom_col()
ggplot(top_ten_ref, aes("Top.Ten.Referring.Sites", Visits)) +
geom_boxplot()
View(scale2)
ggplot(top_ten_ref, aes("Top.Ten.Referring.Sites", Visits)) +
geom_bar()
ggplot(top_ten_ref, aes("Top.Ten.Referring.Sites", Visits)) +
geom_bar(stat = "identity")
all_traffic$Visits <- lapply(all_traffic$Visits, function(x) {as.numeric(gsub(",", "", x))})
View(all_traffic)
View(all_traffic)
top_ten_ref$Visits <- lapply(top_ten_ref$Visits, function(x) {as.numeric(gsub(",", "", x))})
ggplot(all_traffic, aes(All.Traffic.Sources, Visits)) +
geom_col()
ggplot(top_ten_ref, aes("Top.Ten.Referring.Sites", Visits)) +
geom_bar(stat = "identity")
View(top_ten_ref)
str(top_ten_ref)
top_ten_ref
top_ten_ref <- read.csv("clipboard", sep = "\t")
top_ten_ref$Visits <- lapply(top_ten_ref$Visits, function(x) {gsub(",", "", x)})
top_ten_ref
View(top_ten_ref)
top_ten_ref$Visits <- lapply(top_ten_ref$Visits, function(x) {as.numeric(gsub(",", "", x))})
ggplot(top_ten_ref, aes("Top.Ten.Referring.Sites", Visits)) +
geom_col()
ggplot(top_ten_ref, aes(Top.Ten.Referring.Sites, Visits)) +
geom_col()
ggplot(top_ten_ref, aes(Top.Ten.Referring.Sites, Visits)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
top_ten_eng$Visits <- lapply(top_ten_eng$Visits, function(x) {as.numeric(gsub(",", "", x))})
top_ten_geo$Visits <- lapply(top_ten_geo$Visits, function(x) {as.numeric(gsub(",", "", x))})
top_ten_bro$Visits <- lapply(top_ten_bro$Visits, function(x) {as.numeric(gsub(",", "", x))})
top_ten_os$Visits <- lapply(top_ten_os$Visits, function(x) {as.numeric(gsub(",", "", x))})
ggplot(top_ten_eng, aes(Top.Ten.Search.Engine.Sources.of.Visits, Visits)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(top_ten_eng, aes(Top.Ten.Search.Engine.Sources.of.Visits, Visits)) +
geom_col()
ggplot(top_ten_geo, aes(Top.Ten.Geographic.Sources.by.Sub.Continent.Region, Visits)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(top_ten_geo, aes(Top.Ten.Geographic.Sources.by.Sub.Continent.Region, Visits)) +
geom_col()
ggplot(top_ten_geo, aes(Top.Ten.Geographic.Sources.by.Sub.Continent.Region, Visits)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(top_ten_bro, aes(Top.Ten.Browsers.Used, Visits)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(top_ten_bro, aes(Top.Ten.Browsers.Used, Visits)) +
geom_col()
ggplot(top_ten_os, aes(Top.Ten.Operating.Systems.Used, Visits)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
all_traffic <- read_excel("CU46-XLS-ENG.xls", sheet = "Demographics", range = "B7:D11")
library(readxl)
all_traffic <- read_excel("CU46-XLS-ENG.xls", sheet = "Demographics", range = "B7:D11")
View(all_traffic)
all_traffic <- read_excel("CU46-XLS-ENG.xls", sheet = "Demographics", range = "B7:C11")
View(all_traffic)
View(all_traffic)
all_traffic$Visits <- lapply(all_traffic$Visits, function(x) {as.numeric(gsub(",", "", x))})
top_ten_eng <- read_excel("CU46-XLS-ENG.xls", sheet = "Demographics", range = "B27:C37")
ggplot(all_traffic, aes(...1, Visits)) +
geom_col()
ggplot(all_traffic, aes(...1, Visits)) +
geom_col() +
xlab("All Traffic Sources")
top_ten_ref <- read_excel("CU46-XLS-ENG.xls", sheet = "Demographics", range = "B14:C24")
top_ten_eng <- read_excel("CU46-XLS-ENG.xls", sheet = "Demographics", range = "B27:C37")
top_ten_geo <- read_excel("CU46-XLS-ENG.xls", sheet = "Demographics", range = "B40:C50")
ggplot(top_ten_ref, aes(reorder(...1, -Visits), Visits)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Top Ten Referring Sites")
ggplot(top_ten_eng, aes(reorder(...1, -Visits), Visits)) +
geom_col() +
xlab("Top Ten Search Engine Sources of Visits")
ggplot(all_traffic, aes(x = reorder(...1, -Visits), y = Visits)) +
geom_col() +
xlab("All Traffic Sources")
ggplot(all_traffic, aes(x = reorder("...1", -Visits), y = Visits)) +
geom_col() +
xlab("All Traffic Sources")
ggplot(all_traffic, aes(x = reorder(...1, Visits), y = Visits)) +
geom_col() +
xlab("All Traffic Sources")
ggplot(all_traffic, aes(x = reorder(...1, -Visits), y = Visits)) +
geom_col() +
xlab("All Traffic Sources")
View(all_traffic)
View(all_traffic)
names(all_traffic)[1] <- 'header'
ggplot(all_traffic, aes(x = reorder(header, -Visits), y = Visits)) +
geom_col() +
xlab("All Traffic Sources")
ggplot(all_traffic, aes(x = reorder(header, Visits), y = Visits)) +
geom_col() +
xlab("All Traffic Sources")
all_traffic$Visits <- as.numeric(c(all_traffic$Visits))
ggplot(all_traffic, aes(x = reorder(header, Visits), y = Visits)) +
geom_col() +
xlab("All Traffic Sources")
ggplot(all_traffic, aes(x = reorder(header, -Visits), y = Visits)) +
geom_col() +
xlab("All Traffic Sources")
by_period %>%
?factor
by_period %>%
??factor
myPaths <- .libPaths()   # get the paths
myPaths <- c("C:/Users/manish.grewal/emdp/R/libs", myPaths[2], myPaths[1])  # switch them
.libPaths(myPaths)  # reassign them
